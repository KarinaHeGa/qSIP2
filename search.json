[{"path":"https://jeffkimbrel.github.io/qSIP2/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 qSIP2 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/articles/controlled_vocab.html","id":"terminology","dir":"Articles","previous_headings":"","what":"Terminology","title":"Controlled vocabulary for qSIP data","text":"source_mat_id also used link sample metadata source metadata term derived MISIP standards. Previous synonyms qSIP include “rep” “tube” qSIP, choices limited one 12C, 13C, 14N, 15N, 16O 18O term also required MISIP field term also required MISIP field qSIP doesn’t strictly adhere MISIP standards, string “glucose” suffice","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/articles/feature_data.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Working with Feature Data","text":"abundance table required file qSIP pipeline. typical ASV/OTU table individual taxa rows, sample names columns. table populated raw sequencing counts amplicon workflow, proxy abundance (like mean/median depth coverage) working MAGs data types.","code":"library(qSIP2)"},{"path":"https://jeffkimbrel.github.io/qSIP2/articles/qSIP_workflow.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Standard qSIP Workflow","text":"complete quantitative stable isotope probing (qSIP) workflow using qSIP2 package starts three input files ends calculated excess atom fraction (EAF) values along ton intermediate data. vignette high-level walk major steps links specific vignettes detail appropriate.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/articles/qSIP_workflow.html","id":"the-input-files","dir":"Articles","previous_headings":"","what":"The Input Files","title":"Standard qSIP Workflow","text":"Preparing formatting input files often tedious part analysis. goal rigid (opinionated) requirements imposed qSIP2 hopefully streamline creation files, automated validation checks can remove many common sources error confusion.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/articles/qSIP_workflow.html","id":"source-data","dir":"Articles","previous_headings":"The Input Files","what":"Source Data","title":"Standard qSIP Workflow","text":"source data highest level metadata row corresponding original experimental source material object. example source dataframe included qSIP2 package called example_source_df. required columns valid source data including unique ID, measure quantitative abundance source material (either total DNA qPCR copies), isotope isotopolog designation. isotopolog column missing example dataframe, let’s add now. dataframe ready, next step convert qsip_source_data object. one main qSIP2 objects hold validate data. object modifies column names standard names supplied function. See vignette(\"source_data\") details.","code":"example_source_df |>   head() |>   knitr::kable() source_df <- example_source_df |>   dplyr::mutate(isotopolog = \"glucose\") source_object <- qsip_source_data(source_df,   isotope = \"Isotope\",   isotopolog = \"isotopolog\",   source_mat_id = \"source\" )  class(source_object) #> [1] \"qsip_source_data\" \"S7_object\" colnames(source_df) #> [1] \"source\"             \"total_copies_per_g\" \"total_dna\"          #> [4] \"Isotope\"            \"Moisture\"           \"isotopolog\" colnames(source_object@data) #> [1] \"isotope\"            \"isotopolog\"         \"source_mat_id\"      #> [4] \"total_copies_per_g\" \"total_dna\"          \"Moisture\""},{"path":"https://jeffkimbrel.github.io/qSIP2/articles/qSIP_workflow.html","id":"sample-data","dir":"Articles","previous_headings":"The Input Files","what":"Sample Data","title":"Standard qSIP Workflow","text":"sample metadata next level detail one row fraction, one row set fastq files sequenced. , several necessary columns valid sample data, including unique sample ID, source came , fraction ID, fraction density measure abundance fraction (total DNA qPCR copy number). additional column can derived percent abundance total sample found fractions. add_gradient_pos_rel_amt() function can help calculate dividing fraction abundance total abundance source putting gradient_pos_rel_amt column. , make qSIP2 object data, time qsip_sample_data object. making objects, get built-validation, example displayed try make object current sample_df. error tells us gradient_position column (“Fraction”) contains non-numeric data, indeed can see stored strings. , let’s fix try creating qsip_sample_data object . OK, worked time gave us valid object. See vignette(\"sample_data\") details relevant visualizations.","code":"example_sample_df |>   head() |>   knitr::kable() sample_df <- example_sample_df |>   add_gradient_pos_rel_amt(source_mat_id = \"source\", amt = \"avg_16S_g_soil\")  sample_df |>   group_by(source) |>   summarize(     qPCR_copies = sum(avg_16S_g_soil),     Relative = sum(gradient_pos_rel_amt)   ) |>   head() |>   knitr::kable() sample_object <- qsip_sample_data(sample_df,   sample_id = \"sample\",   source_mat_id = \"source\",   gradient_position = \"Fraction\",   gradient_pos_density = \"density_g_ml\",   gradient_pos_amt = \"avg_16S_g_soil\",   gradient_pos_rel_amt = \"gradient_pos_rel_amt\" )  # ERROR: some gradient_position values are non-numeric class(sample_df$Fraction) #> [1] \"character\" sample_df <- sample_df |>   dplyr::mutate(Fraction = as.integer(Fraction))  sample_object <- qsip_sample_data(sample_df,   sample_id = \"sample\",   source_mat_id = \"source\",   gradient_position = \"Fraction\",   gradient_pos_density = \"density_g_ml\",   gradient_pos_amt = \"avg_16S_g_soil\",   gradient_pos_rel_amt = \"gradient_pos_rel_amt\" )  class(sample_object) #> [1] \"qsip_sample_data\" \"S7_object\""},{"path":"https://jeffkimbrel.github.io/qSIP2/articles/qSIP_workflow.html","id":"feature-data","dir":"Articles","previous_headings":"The Input Files","what":"Feature Data","title":"Standard qSIP Workflow","text":"Finally, last three necessary input files feature abundance table, aka “OTU table” “ASV table”. format dataframe unique feature IDs first column, additional column sample. row contains whole number (non-normalized) counts feature sample. now, validation step requires values positive integers, future option added accept numeric values, e.g. coverages working MAGs metagenomes. See vignette(\"feature_data\") details relevant visualizations.","code":"example_feature_df[1:6] |>   head() |>   knitr::kable() feature_object <- qsip_feature_data(example_feature_df,   feature_id = \"ASV\" ) class(feature_object) #> [1] \"qsip_feature_data\" \"S7_object\""},{"path":"https://jeffkimbrel.github.io/qSIP2/articles/qSIP_workflow.html","id":"the-qsip_data-object","dir":"Articles","previous_headings":"","what":"The qsip_data Object","title":"Standard qSIP Workflow","text":"qsip_data class main workhorse object qSIP2 package. built validated versions three previous objects, meant self-contained object necessary information analysis. design input workflow functions, well output. reason, can feel safe overwriting object new analysis work, can create new object step prefer. Behind scenes, creation object also runs calculations, particularly getting weighted-average density (WAD) feature source, also tube relative abundance feature. , certain visualizations can made.","code":"qsip_object <- qsip_data(   source_data = source_object,   sample_data = sample_object,   feature_data = feature_object ) #> WARNING: 1887 feature_ids have no counts in one or more source_mat_ids class(qsip_object) #> [1] \"qsip_data\" \"S7_object\" plot_source_wads(qsip_object, group = \"Moisture\") plot_sample_curves(qsip_object)"},{"path":"https://jeffkimbrel.github.io/qSIP2/articles/qSIP_workflow.html","id":"main-workflow","dir":"Articles","previous_headings":"","what":"Main Workflow","title":"Standard qSIP Workflow","text":"Now validated qsip_data object, can start main workflow consisting comparison grouping, filtering, resampling finally calculating EAF values.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/articles/qSIP_workflow.html","id":"comparison-grouping","dir":"Articles","previous_headings":"Main Workflow","what":"Comparison Grouping","title":"Standard qSIP Workflow","text":"qsip_data object likely contains data, may want run comparisons certain subsets. show_comparison_groups() function attempts identify suggest sources may want compare. group argument important define rows thinks constitute comparison. isotope argument defines labeled unlabeled values comparisons. can complex, particularly one isotopolog, details made available future another vignette. work “Normal” moisture groups likely want use S149, S150, S151 S152 unlabeled compare S178, S179 S180 labeled. Sometimes may also want compare specific labeled samples group unlabeled. qSIP2 package convenient way get using get_all_by_isotope() function.","code":"show_comparison_groups(qsip_object,   group = \"Moisture\",   isotope = \"isotope\",   source_mat_id = \"source_mat_id\" ) |> knitr::kable() get_all_by_isotope(qsip_object, \"12C\") #> [1] \"S149\" \"S150\" \"S151\" \"S152\" \"S161\" \"S162\" \"S163\" \"S164\""},{"path":"https://jeffkimbrel.github.io/qSIP2/articles/qSIP_workflow.html","id":"filter-features","dir":"Articles","previous_headings":"Main Workflow","what":"Filter Features","title":"Standard qSIP Workflow","text":"Rather filter front, might make sense run comparison specific filtering presence requirements just sources comparing. run_feature_filter() function takes different set fraction source requirements labeled unlabeled data, allowing precisely tailor filtering results. , can see rather strict filtering removed 64 features dataset. can visualize filtering results per-source basis.  Although large number features removed, can tell 64 remained actually still make large proportion total abundance sample. , retained features (blue) make ~80-85% total data, removed data (orange) reamining ~15-20%. B, can see surprisingly large number features found 0 times many sources (gray) therefore never present regardless filtering choices. although ~100-200 features passed filtering requirements (blue), requirement min_unlabeled_sources = 6 min_labeled_sources = 3 means features present many blue slices retained, leaving 64 total. Let’s comparison drought samples. , can see rather strict filtering removed 64 features dataset. can visualize filtering results per-source basis.","code":"qsip_normal <- run_feature_filter(qsip_object,   unlabeled_source_mat_ids = get_all_by_isotope(qsip_object, \"12C\"),   labeled_source_mat_ids = c(\"S178\", \"S179\", \"S180\"),   min_unlabeled_sources = 6,   min_labeled_sources = 3,   min_unlabeled_fractions = 6,   min_labeled_fractions = 6 ) #> There are initially 2030 unique feature_ids #> 1705 of these have abundance in at least one fraction of one source_mat_id #> =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ #> Filtering feature_ids by fraction... #> 1519 unlabeled and 1417 labeled feature_ids were found in zero fractions in at least one source_mat_id #> 1440 unlabeled and 830 labeled feature_ids were found in too few fractions in at least one source_mat_id #> 299 unlabeled and 209 labeled feature_ids passed the fraction filter #> In total, 346 unique feature_ids passed the fraction filtering requirements... #> =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ #> Filtering feature_ids by source... #> 47 unlabeled and 137 labeled feature_ids failed the source filter because they were found in zero sources #> 196 unlabeled and 127 labeled feature_ids failed the source filter because they were found in too few sources #> 103 unlabeled and 82 labeled feature_ids passed the source filter #> =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ #> In total, 64 unique feature_ids passed all fraction and source filtering requirements plot_filter_gradient_position(qsip_normal) qsip_drought <- run_feature_filter(qsip_object,   unlabeled_source_mat_ids = get_all_by_isotope(qsip_object, \"12C\"),   labeled_source_mat_ids = c(\"S200\", \"S201\", \"S202\", \"S203\"),   min_unlabeled_sources = 6,   min_labeled_sources = 3,   min_unlabeled_fractions = 6,   min_labeled_fractions = 6 ) #> There are initially 2030 unique feature_ids #> 1877 of these have abundance in at least one fraction of one source_mat_id #> =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ #> Filtering feature_ids by fraction... #> 1691 unlabeled and 1558 labeled feature_ids were found in zero fractions in at least one source_mat_id #> 1440 unlabeled and 1212 labeled feature_ids were found in too few fractions in at least one source_mat_id #> 299 unlabeled and 285 labeled feature_ids passed the fraction filter #> In total, 367 unique feature_ids passed the fraction filtering requirements... #> =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ #> Filtering feature_ids by source... #> 68 unlabeled and 82 labeled feature_ids failed the source filter because they were found in zero sources #> 196 unlabeled and 171 labeled feature_ids failed the source filter because they were found in too few sources #> 103 unlabeled and 114 labeled feature_ids passed the source filter #> =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ #> In total, 89 unique feature_ids passed all fraction and source filtering requirements plot_filter_gradient_position(qsip_drought)"},{"path":"https://jeffkimbrel.github.io/qSIP2/articles/qSIP_workflow.html","id":"resampling","dir":"Articles","previous_headings":"Main Workflow","what":"Resampling","title":"Standard qSIP Workflow","text":"order calculate confidence interval EAF values, first need run resampling/bootstrapping procedure WAD values. step requires random sampling good practice set “seed”. Rather outside function, can pass seed argument. leave blank, generate random seed. seed generate results time run resampling process.","code":"qsip_normal <- run_resampling(qsip_normal,   resamples = 1000,   with_seed = 17 ) #> labeled resamples... ■■■■■                             14% |  ETA: 13s #> labeled resamples... ■■■■■■■■■■■                       34% |  ETA: 10s #> labeled resamples... ■■■■■■■■■■■■■■■■■■                55% |  ETA:  7s #> labeled resamples... ■■■■■■■■■■■■■■■■■■■■■■■■          76% |  ETA:  3s #> labeled resamples... ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■    98% |  ETA:  0s #> unlabeled resamples... ■■■■■■■                           19% |  ETA: 11s #> unlabeled resamples... ■■■■■■■■■■■■■                     41% |  ETA:  8s #> unlabeled resamples... ■■■■■■■■■■■■■■■■■■■■              62% |  ETA:  5s #> unlabeled resamples... ■■■■■■■■■■■■■■■■■■■■■■■■■■        83% |  ETA:  2s qsip_normal_17_again <- run_resampling(qsip_normal,   resamples = 1000,   with_seed = 17 ) #> labeled resamples... ■■■■■■■                           21% |  ETA: 11s #> labeled resamples... ■■■■■■■■■■■■■■                    42% |  ETA:  8s #> labeled resamples... ■■■■■■■■■■■■■■■■■■■■              64% |  ETA:  5s #> labeled resamples... ■■■■■■■■■■■■■■■■■■■■■■■■■■■       86% |  ETA:  2s #> unlabeled resamples... ■■■                                8% |  ETA: 13s #> unlabeled resamples... ■■■■■■■■■■                        29% |  ETA: 10s #> unlabeled resamples... ■■■■■■■■■■■■■■■■                  51% |  ETA:  7s #> unlabeled resamples... ■■■■■■■■■■■■■■■■■■■■■■            72% |  ETA:  4s #> unlabeled resamples... ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■     93% |  ETA:  1s  # two runs are identical identical(qsip_normal, qsip_normal_17_again) #> [1] TRUE identical(qsip_normal@resamples$l[[334]], qsip_normal_17_again@resamples$l[[334]]) #> [1] TRUE  # but individual resamplings within are different identical(qsip_normal@resamples$l[[1]], qsip_normal@resamples$l[[2]]) #> [1] FALSE qsip_drought <- run_resampling(qsip_drought,   resamples = 1000,   with_seed = 17 ) #> labeled resamples... ■■■■                              11% |  ETA: 12s #> labeled resamples... ■■■■■■■■■■■                       33% |  ETA:  9s #> labeled resamples... ■■■■■■■■■■■■■■■■■                 54% |  ETA:  6s #> labeled resamples... ■■■■■■■■■■■■■■■■■■■■■■■■          76% |  ETA:  3s #> labeled resamples... ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■    98% |  ETA:  0s #> unlabeled resamples... ■■■■■■■                           19% |  ETA: 11s #> unlabeled resamples... ■■■■■■■■■■■■■                     40% |  ETA:  8s #> unlabeled resamples... ■■■■■■■■■■■■■■■■■■■               60% |  ETA:  6s #> unlabeled resamples... ■■■■■■■■■■■■■■■■■■■■■■■■■         81% |  ETA:  3s"},{"path":"https://jeffkimbrel.github.io/qSIP2/articles/qSIP_workflow.html","id":"eaf-calculations","dir":"Articles","previous_headings":"","what":"EAF Calculations","title":"Standard qSIP Workflow","text":"finally last main step, calculating summarizing excess atom fraction (EAF) values. two functions run, first (run_EAF_calculations()) calculate EAF observed data resamplings, second (summarize_EAF_values()) summarizes data chosen confidence interval. ’ll also mutate() add original Moisture condition dataframe combine . can plot top 25 moisture condition.  plot_feature_curves() function allows us plot tube relative abundances specific feature IDs. Let’s look top .","code":"qsip_normal <- run_EAF_calculations(qsip_normal) qsip_drought <- run_EAF_calculations(qsip_drought)  normal <- summarize_EAF_values(qsip_normal, confidence = 0.9) |>   mutate(Moisture = \"Normal\") #> Confidence level = 0.9  drought <- summarize_EAF_values(qsip_drought, confidence = 0.9) |>   mutate(Moisture = \"Drought\") #> Confidence level = 0.9  eaf <- rbind(normal, drought) eaf |>   group_by(Moisture) |>   slice_max(observed_EAF, n = 25) |>   ggplot(aes(y = reorder(feature_id, observed_EAF), x = mean_resampled_EAF)) +   geom_errorbar(aes(     xmin = lower, xmax = upper,     color = ifelse(lower > 0, \"cornflowerblue\", \"gray10\")   )) +   geom_point(color = \"gray30\") +   geom_vline(xintercept = 0) +   scale_color_identity() +   theme(legend.position = \"none\") +   facet_wrap(~Moisture, ncol = 2) plot_feature_curves(qsip_normal,   feature_ids = c(\"ASV_55\", \"ASV_20\", \"ASV_93\", \"ASV_41\", \"ASV_2\", \"ASV_5\") )"},{"path":"https://jeffkimbrel.github.io/qSIP2/articles/sample_data.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Working with Sample Data","text":"qSIP2, “sample data” refers high level metadata associated either experiment individual fractions. vignette show available tools format validate sample data qsip_sample_data class qSIP2 package.","code":"library(dplyr) library(qSIP2)"},{"path":"https://jeffkimbrel.github.io/qSIP2/articles/sample_data.html","id":"what-is-a-sample","dir":"Articles","previous_headings":"Background","what":"What is a sample?","title":"Working with Sample Data","text":"word sample typically refers biological environmental entity DNA isolated well single sequencing run tied sample. qSIP, however, multiple sequencing runs per biological subject, term sample historically reserved sequencing fraction. practice, means many samples single biological subject. Traditionally, original biological subject qSIP simply called replicate “rep”. proposed MISIP1 standards, concept rep replaced source_mat_id. example, identifying active community members pot soil triplicate, may 3 soil pot reps given 16O (maybe named “A_16O”, “B_16O” “C_16O”), 3 reps 18O (maybe named “A_18O”, “B_18O” “C_18O”). experiment, 6 totals reps. rep separated 20 fractions sequenced, 120 (6x20) samples. working amplicon data, fastq file sample, column ASV/OTU table (taxa rows).","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/articles/sample_data.html","id":"creating-a-standardized-sample-data-tibble","dir":"Articles","previous_headings":"","what":"Creating a standardized sample data tibble","title":"Working with Sample Data","text":"standardize qSIP workflow, column names adhere closely MISIP standards possible. Absolute requirements slightly different official MISIP standards, qSIP2 package source_mat_id, isotope, gradient_position, gradient_pos_density gradient_pos_rel_amt fields.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/articles/sample_data.html","id":"isotope-and-isotopolog_label-fields","dir":"Articles","previous_headings":"Creating a standardized sample data tibble","what":"isotope and isotopolog_label fields","title":"Working with Sample Data","text":"traditional qSIP isotope field populated either light (e.g. 16O) heavy (e.g. 18O) isotope depending substrate used rep source_mat_id. MISIP standards, heavy isotope listed isotope field, secondary field isotopolog_label used designate whether replicate used substrate “natural abundance” (.e. “light”) “isotopically labeled” (.e. “heavy”) isotopes. qSIP2 package, either method can used. isotopolog_label missing dataset assume light heavy isotopes present isotope field. , isotopolog_label field, heavy isotope designation allowed isotope field dataframe pass validation checks light isotopes listed . Conversion two objects can done add_isotopolog_label() remove_isotopolog_label() functions.","code":"# original data has a mixture of isotopes head(sample_data_nonMISIP)  sample_data_nonMISIP %>%   count(isotope)  # new data has only one isotope and a mixture of isotopolog_label df_with_labels <- add_isotopolog_label(sample_data_nonMISIP,   isotope = \"isotope\" )  df_with_labels %>%   count(isotope, isotopolog_label)  # after converting back the isotope column is a mixture again remove_isotopolog_label(df_with_labels) %>%   count(isotope)"},{"path":"https://jeffkimbrel.github.io/qSIP2/articles/sample_data.html","id":"gradient_pos_rel_amt-field","dir":"Articles","previous_headings":"Creating a standardized sample data tibble","what":"gradient_pos_rel_amt field","title":"Working with Sample Data","text":"requirement qSIP gradient_pos_rel_amt field, gives percent amount fraction whole. preferred method given qPCR copy numbers, DNA concentrations can used well. example, 100,000 total 16S copies replicate determined qPCR, 15,000 copies fraction 7, gradient_pos_rel_amt value fraction 7 0.15 (15,000 / 100,000). Similarly, 25ng total DNA used density separation, fraction 7 3.75 ng DNA recovered, gradient_pos_rel_amt also 0.15 (3.75 / 25). Ideally, gradient_pos_rel_amt given source_mat_id add 1, situations might less 1. example, removed fractions didn’t sequence well reason remove fraction. 16S DNA concentrations removed samples subtracted total. , example , fraction 7 needed removed, total fractions source_mat_id 0.85. Another situation although added 25ng centrifugation, recovered 20ng rest lost2. total fractions within source_mat_id within never greater 1. sample data tibble gradient_pos_rel_amt function can add . add_gradient_pos_rel_amt() can create column either column qPCR totals, DNA concentrations. function can know missing fractions, totals per source_mat_id equal 1. fractions want removed, keep dataframe add_gradient_pos_rel_amt() remove .","code":"# gradient_pos_rel_amt to a dataframe without this column add_gradient_pos_rel_amt(sample_data_nonMISIP,   source_mat_id = \"rep\", # the source_mat_id or per-tube grouping   amt = \"dna_conc\" # the column with total amounts ) %>%   head()  # adding to a dataframe with an existing gradient_pos_rel_amt will give an error add_gradient_pos_rel_amt(sample_data_MISIP,   amt = \"gradient_pos_dna\" )  # adding overwrite = T removes the error add_gradient_pos_rel_amt(sample_data_MISIP,   amt = \"gradient_pos_dna\",   overwrite = T ) %>%   head()"},{"path":"https://jeffkimbrel.github.io/qSIP2/articles/sample_data.html","id":"make-a-qsip-sample-data-object","dir":"Articles","previous_headings":"","what":"Make a qSIP sample data object","title":"Working with Sample Data","text":"qsip_sample_data constructor builds sample data object dataframe. qSIP2 package comes basic example tibble called sample_data_MISIP, columns already formatted proper MISIP headers. ’s , now.","code":"# qdf = qsip_sample_data(sample_data_MISIP)"},{"path":[]},{"path":"https://jeffkimbrel.github.io/qSIP2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jeff Kimbrel. Author, maintainer.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kimbrel J (2023). qSIP2: qSIP Analysis. https://github.com/jeffkimbrel/qSIP2, https://jeffkimbrel.github.io/qSIP2/.","code":"@Manual{,   title = {qSIP2: qSIP Analysis},   author = {Jeff Kimbrel},   year = {2023},   note = {https://github.com/jeffkimbrel/qSIP2, https://jeffkimbrel.github.io/qSIP2/}, }"},{"path":"https://jeffkimbrel.github.io/qSIP2/index.html","id":"qsip2-","dir":"","previous_headings":"","what":"qSIP Analysis","title":"qSIP Analysis","text":"qSIP2 R package refactored reimagined version original qSIP pipeline. come!","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"qSIP Analysis","text":"can install development version qSIP2 GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"jeffkimbrel/qSIP2\")"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/add_gradient_pos_rel_amt.html","id":null,"dir":"Reference","previous_headings":"","what":"Add gradient_pos_rel_amt to data — add_gradient_pos_rel_amt","title":"Add gradient_pos_rel_amt to data — add_gradient_pos_rel_amt","text":"function calculate relative amount fraction compared whole replicate using either qPCR copies DNA concentrations.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/add_gradient_pos_rel_amt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add gradient_pos_rel_amt to data — add_gradient_pos_rel_amt","text":"","code":"add_gradient_pos_rel_amt(   data,   amt,   source_mat_id = \"source_mat_id\",   overwrite = FALSE )"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/add_gradient_pos_rel_amt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add gradient_pos_rel_amt to data — add_gradient_pos_rel_amt","text":"data (dataframe) Sample metadata amt (string) Column name qPCR DNA amounts per fraction source_mat_id (string, default: \"source_mat_id\") Grouping variable replicate overwrite (bool, default: FALSE) Determines whether overwrite existing gradient_pos_rel_amt column","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/add_gradient_pos_rel_amt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add gradient_pos_rel_amt to data — add_gradient_pos_rel_amt","text":"dataframe gradient_pos_rel_amt column","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/add_isotopolog_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Add isotopolog_label to source data — add_isotopolog_label","title":"Add isotopolog_label to source data — add_isotopolog_label","text":"convert isotope dataframe one isotope isotopolog_label satisfy MISIP requirements","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/add_isotopolog_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add isotopolog_label to source data — add_isotopolog_label","text":"","code":"add_isotopolog_label(data, isotope = \"isotope\")"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/add_isotopolog_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add isotopolog_label to source data — add_isotopolog_label","text":"data (dataframe) Sample metadata isotope (string, default: \"isotope\") Column name isotope data","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/add_isotopolog_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add isotopolog_label to source data — add_isotopolog_label","text":"dataframe isotopolog_label column added isotope column modified","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/add_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a taxonomy table to qSIP abundance data — add_taxonomy","title":"Add a taxonomy table to qSIP abundance data — add_taxonomy","text":"Add taxonomy table qSIP abundance data","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/add_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a taxonomy table to qSIP abundance data — add_taxonomy","text":"","code":"add_taxonomy(feature_object, taxa, feature_id)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/add_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a taxonomy table to qSIP abundance data — add_taxonomy","text":"feature_object (qsip_feature_data) object qsip_feature_data class taxa (dataframe) taxa table id (string) column name taxa ids match ids abundance table","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/add_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a taxonomy table to qSIP abundance data — add_taxonomy","text":"updated qsip_feature_data taxonomy slot populated taxonomy dataframe.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_EAF.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate EAF value — calculate_EAF","title":"Calculate EAF value — calculate_EAF","text":"Calculate EAF value","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_EAF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate EAF value — calculate_EAF","text":"","code":"calculate_EAF(M_labeled, M, M_labeledmax, isotope)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_EAF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate EAF value — calculate_EAF","text":"M_labeled Molecular weight labeled feature M Molecular weight unlabeled feature M_labeledmax Theoretical molecular weight completely labeled feature isotope isotope determine calculation run","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_M.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate molecular weight of the labeled feature — calculate_M","title":"Calculate molecular weight of the labeled feature — calculate_M","text":"GC value given equation usually calculated density value, derived sequence .","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_M.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate molecular weight of the labeled feature — calculate_M","text":"","code":"calculate_M(G)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_M.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate molecular weight of the labeled feature — calculate_M","text":"G (numeric) GC content feature, ranges 0-1.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_M.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate molecular weight of the labeled feature — calculate_M","text":"M molecular weight sequence G GC content","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_M.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate molecular weight of the labeled feature — calculate_M","text":"function corresponds equation 6 Hungate, 2015.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_M_labeled.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate molecular weight of the labeled feature — calculate_M_labeled","title":"Calculate molecular weight of the labeled feature — calculate_M_labeled","text":"Calculate molecular weight labeled feature","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_M_labeled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate molecular weight of the labeled feature — calculate_M_labeled","text":"","code":"calculate_M_labeled(M, W_lab_mean, W_unlab_mean)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_M_labeled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate molecular weight of the labeled feature — calculate_M_labeled","text":"M (numeric) Molecular weight unlabeled feature W_lab_mean (numeric) WAD (mean WAD) value labeled feature W_unlab_mean (numeric) WAD (mean WAD) value unlabeled feature","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_M_labeled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate molecular weight of the labeled feature — calculate_M_labeled","text":"M_labeled molecular weight labeled feature","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_M_labeledmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate molecular weight of the labeled feature — calculate_M_labeledmax","title":"Calculate molecular weight of the labeled feature — calculate_M_labeledmax","text":"function corresponds equation 7 Hungate, 2015","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_M_labeledmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate molecular weight of the labeled feature — calculate_M_labeledmax","text":"","code":"calculate_M_labeledmax(M, atom_count, isotope, propO = 1)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_M_labeledmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate molecular weight of the labeled feature — calculate_M_labeledmax","text":"M (numeric) Molecular weight unlabeled feature atom_count (numeric) count relevant atoms (C, N O) isotope (string) heavy isotope determining calculation run. Needs 13C, 15N 18O propO (numeric) Proportion oxygen atoms DNA come environmental water","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_M_labeledmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate molecular weight of the labeled feature — calculate_M_labeledmax","text":"M_labeledmax theoretical maximum molecular weight labeled feature ","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_Z.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the WAD difference Z — calculate_Z","title":"Calculate the WAD difference Z — calculate_Z","text":"just basic subtraction, probably overkill make function!","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_Z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the WAD difference Z — calculate_Z","text":"","code":"calculate_Z(labeled, unlabeled)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_Z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the WAD difference Z — calculate_Z","text":"labeled (string) column labeled WAD mean labeled WAD value unlabeled (string) column unlabeled WAD mean unlabeled WAD value","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_Z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the WAD difference Z — calculate_Z","text":"value difference labeled unlabeled","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_Z.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the WAD difference Z — calculate_Z","text":"function corresponds equation 4 Hungate, 2015","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_atoms.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the number of relevant atoms per nucleotide — calculate_atoms","title":"Get the number of relevant atoms per nucleotide — calculate_atoms","text":"Carbon nitrogen atoms varies GC content, oxygen content constant DNA regardless GC content.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_atoms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the number of relevant atoms per nucleotide — calculate_atoms","text":"","code":"calculate_atoms(G, isotope)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_atoms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the number of relevant atoms per nucleotide — calculate_atoms","text":"G (numeric) GC percentage isotope (string) isotope use calculations... either 13C, 15N 18O","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_gc_from_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate GC% from density/WAD — calculate_gc_from_density","title":"Calculate GC% from density/WAD — calculate_gc_from_density","text":"function takes density value optional method returns predicted GC% content DNA sequence density.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_gc_from_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate GC% from density/WAD — calculate_gc_from_density","text":"","code":"calculate_gc_from_density(density, method = \"MM\")"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_gc_from_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate GC% from density/WAD — calculate_gc_from_density","text":"density (numeric) Density WAD values method (string, default: MM) GC% calculation method","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_gc_from_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate GC% from density/WAD — calculate_gc_from_density","text":"vector GC% values","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_gc_from_density.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate GC% from density/WAD — calculate_gc_from_density","text":"method parameter changes formula provided McHugh & Morrissey (MM, unpublished) Schildkraut (S, 1962). function corresponds equation 5 Hungate, 2015","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_gc_from_sequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate GC% from a sequence — calculate_gc_from_sequence","title":"Calculate GC% from a sequence — calculate_gc_from_sequence","text":"function takes sequence counts number G C bases, divides total sequence length.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_gc_from_sequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate GC% from a sequence — calculate_gc_from_sequence","text":"","code":"calculate_gc_from_sequence(sequence)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_gc_from_sequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate GC% from a sequence — calculate_gc_from_sequence","text":"sequence (string) Density WAD values","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_gc_from_sequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate GC% from a sequence — calculate_gc_from_sequence","text":"vector GC% values","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_resampled_wads.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function for resampling WAD values — calculate_resampled_wads","title":"Internal function for resampling WAD values — calculate_resampled_wads","text":"Designed purrr::map() function called run_resampling.R","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_resampled_wads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function for resampling WAD values — calculate_resampled_wads","text":"","code":"calculate_resampled_wads(i, wad_data, type)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_resampled_wads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function for resampling WAD values — calculate_resampled_wads","text":"(integer) specific iteration resampling wad_data (dataframe) WAD dataframe resample columns type (string) Text whether wad data labeled unlabeled data","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_resampled_wads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function for resampling WAD values — calculate_resampled_wads","text":"resampling data boot @resamples","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_source_wads.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate global weighted average density (WAD) value for a source_mat_id — calculate_source_wads","title":"Calculate global weighted average density (WAD) value for a source_mat_id — calculate_source_wads","text":"Calculate global weighted average density (WAD) value source_mat_id","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_source_wads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate global weighted average density (WAD) value for a source_mat_id — calculate_source_wads","text":"","code":"calculate_source_wads(sample_data)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_source_wads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate global weighted average density (WAD) value for a source_mat_id — calculate_source_wads","text":"sample_data (qsip_sample_data) Sample data object","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_source_wads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate global weighted average density (WAD) value for a source_mat_id — calculate_source_wads","text":"dataframe two columns, 1) source_mat_id 2) global WAD value source_mat_id","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_tube_rel_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate tube relative abundance — calculate_tube_rel_abundance","title":"Calculate tube relative abundance — calculate_tube_rel_abundance","text":"\"tube level relative abundance\" two layers relative abundance. first takes raw_abundance counts per sample, divides total get rel_abundance values. Next, takes values divides gradient_pos_rel_amt values stored source level normalizes rel_abundance values amount sample per fraction. final value stored tube_rel_abundance column.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_tube_rel_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate tube relative abundance — calculate_tube_rel_abundance","text":"","code":"calculate_tube_rel_abundance(source_data, sample_data, feature_data)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_tube_rel_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate tube relative abundance — calculate_tube_rel_abundance","text":"source_data (qsip_source_data) qSIP source data object sample_data (qsip_sample_data) qSIP sample data object feature_data (qsip_feature_data) qSIP feature data object","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_tube_rel_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate tube relative abundance — calculate_tube_rel_abundance","text":"long format dataframe one row per feature_id per sample_id","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_tube_rel_abundance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate tube relative abundance — calculate_tube_rel_abundance","text":"speed calculations, function removes feature_ids sample abundance zero.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_wads.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate weighted average density (WAD) values — calculate_wads","title":"Calculate weighted average density (WAD) values — calculate_wads","text":"Calculate weighted average density (WAD) values","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_wads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate weighted average density (WAD) values — calculate_wads","text":"","code":"calculate_wads(tube_rel_abundance)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_wads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate weighted average density (WAD) values — calculate_wads","text":"tube_rel_abundance (dataframe) Output calculate_tube_rel_abundance()","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/calculate_wads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate weighted average density (WAD) values — calculate_wads","text":"list two objects, 1) dataframe WAD info feature_ids found least one sample, 2) fraction counts feature_ids, including found samples. also prints message screen count feature_ids entirely missing least one sample.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/completely_labeled_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the max labeling of a given isotope — completely_labeled_values","title":"Returns the max labeling of a given isotope — completely_labeled_values","text":"Returns max labeling given isotope","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/completely_labeled_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the max labeling of a given isotope — completely_labeled_values","text":"","code":"completely_labeled_values(isotope)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/completely_labeled_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the max labeling of a given isotope — completely_labeled_values","text":"isotope heavy isotope (13C, 15N 18O)","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/example_feature_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Feature Abundance Dataframe — example_feature_df","title":"Example Feature Abundance Dataframe — example_feature_df","text":"example feature table abundances","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/example_feature_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Feature Abundance Dataframe — example_feature_df","text":"","code":"example_feature_df"},{"path":[]},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/example_feature_df.html","id":"example-feature-df","dir":"Reference","previous_headings":"","what":"example_feature_df","title":"Example Feature Abundance Dataframe — example_feature_df","text":"data frame 2,030 rows 285 columns: ASV unique feature ID Columns 2-285 IDs samples","code":""},{"path":[]},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/example_feature_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Example qSIP Feature Object — example_feature_object","title":"Example qSIP Feature Object — example_feature_object","text":"example qsip_feature_data object","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/example_feature_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example qSIP Feature Object — example_feature_object","text":"","code":"example_feature_object"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/example_qsip_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Example qSIP Object — example_qsip_object","title":"Example qSIP Object — example_qsip_object","text":"example qsip_data object","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/example_qsip_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example qSIP Object — example_qsip_object","text":"","code":"example_qsip_object"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/example_sample_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Sample Dataframe — example_sample_df","title":"Example Sample Dataframe — example_sample_df","text":"example sample data table fraction-related metadata","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/example_sample_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Sample Dataframe — example_sample_df","text":"","code":"example_sample_df"},{"path":[]},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/example_sample_df.html","id":"example-sample-df","dir":"Reference","previous_headings":"","what":"example_sample_df","title":"Example Sample Dataframe — example_sample_df","text":"data frame 284 rows 6 columns: sample unique sample id fraction source parent source id sample Fraction gradient position density_g_ml density fraction dna_conc concentration DNA post-fractionation avg_16S_g_soil qPCR amplicon count","code":""},{"path":[]},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/example_sample_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Example qSIP Sample Object — example_sample_object","title":"Example qSIP Sample Object — example_sample_object","text":"example qsip_sample_data object","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/example_sample_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example qSIP Sample Object — example_sample_object","text":"","code":"example_sample_object"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/example_source_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Source Dataframe — example_source_df","title":"Example Source Dataframe — example_source_df","text":"example source data table top-level (pre-fractionation) metadata","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/example_source_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Source Dataframe — example_source_df","text":"","code":"example_source_df"},{"path":[]},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/example_source_df.html","id":"example-source-df","dir":"Reference","previous_headings":"","what":"example_source_df","title":"Example Source Dataframe — example_source_df","text":"data frame 15 rows 5 columns: source unique name biological replicate source_mat_id total_copies_per_g total amplicon copies determined qPCR total_dna total DNA isolated source Isotope isotope used source Moisture example relevant treatment","code":""},{"path":[]},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/example_source_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Example qSIP Source Object — example_source_object","title":"Example qSIP Source Object — example_source_object","text":"example qsip_source_data object","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/example_source_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example qSIP Source Object — example_source_object","text":"","code":"example_source_object"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/fraction_results_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter features by fraction message formatting — fraction_results_message","title":"Filter features by fraction message formatting — fraction_results_message","text":"Filter features fraction message formatting","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/fraction_results_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter features by fraction message formatting — fraction_results_message","text":"","code":"fraction_results_message(by_fraction)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/fraction_results_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter features by fraction message formatting — fraction_results_message","text":"by_fraction by_fraction dataframe run_feature_filter","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/get_all_by_isotope.html","id":null,"dir":"Reference","previous_headings":"","what":"Get source_mat_ids meeting certain isotope conditions — get_all_by_isotope","title":"Get source_mat_ids meeting certain isotope conditions — get_all_by_isotope","text":"Get source_mat_ids meeting certain isotope conditions","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/get_all_by_isotope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get source_mat_ids meeting certain isotope conditions — get_all_by_isotope","text":"","code":"get_all_by_isotope(qsip_data_object, isotopes)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/get_all_by_isotope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get source_mat_ids meeting certain isotope conditions — get_all_by_isotope","text":"qsip_data_object (qsip_data qsip_source_data) qsip object source data isotopes (string(s)) Isotopes used pull source_mat_ids. Can standard isotope name (e.g. 12C) special terms labeled unlabeled","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/get_all_by_isotope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get source_mat_ids meeting certain isotope conditions — get_all_by_isotope","text":"vector source_mat_ids. may also print messages.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/get_isotope_designation.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer which isotope calculations to use — get_isotope_designation","title":"Infer which isotope calculations to use — get_isotope_designation","text":"uses list source_mat_ids filtered qsip_data object get isotope designation two reasons, 1) make sure comparable (e.g. 12C/13C, 14N/15N 16O/18O mismatches), 2) return best guess labeled isotope EAF calculations proceed correctly.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/get_isotope_designation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer which isotope calculations to use — get_isotope_designation","text":"","code":"get_isotope_designation(qsip_data_object)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/get_isotope_designation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infer which isotope calculations to use — get_isotope_designation","text":"qsip_dat_object (qsip_data) qsip_data object","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/get_isotope_designation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infer which isotope calculations to use — get_isotope_designation","text":"single labeled isotope designation 13C, 15N 18O, gives error inference made.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/get_sample_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sample counts from qSIP sample data — get_sample_counts","title":"Get sample counts from qSIP sample data — get_sample_counts","text":"Get sample counts qSIP sample data","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/get_sample_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sample counts from qSIP sample data — get_sample_counts","text":"","code":"get_sample_counts(x, ...)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/get_sample_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sample counts from qSIP sample data — get_sample_counts","text":"x object qsip_sample_data class","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/plot_density_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Cook's outlier detection on gradient positions vs densities — plot_density_outliers","title":"Cook's outlier detection on gradient positions vs densities — plot_density_outliers","text":"Assuming linear relationship gradient_position gradient_pos_density, function plot potential outliers using Cook's distance defined sensitivity. lower sensitivity, likely outliers flagged.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/plot_density_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cook's outlier detection on gradient positions vs densities — plot_density_outliers","text":"","code":"plot_density_outliers(sample_data, sensitivity = 4)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/plot_density_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cook's outlier detection on gradient positions vs densities — plot_density_outliers","text":"sample_data (qsip_sample_data qsip_data) qsip object sample data sensitivity (numeric, default: 4) sensitivity value, lower values sensitive outlier detection","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/plot_density_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cook's outlier detection on gradient positions vs densities — plot_density_outliers","text":"ggplot object","code":""},{"path":[]},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/plot_feature_curves.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot qSIP feature data density curves — plot_feature_curves","title":"Plot qSIP feature data density curves — plot_feature_curves","text":"Plot qSIP feature data density curves","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/plot_feature_curves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot qSIP feature data density curves — plot_feature_curves","text":"","code":"plot_feature_curves(qsip_data_object, feature_ids, source_mat_ids = NULL)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/plot_feature_curves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot qSIP feature data density curves — plot_feature_curves","text":"qsip_data_object (qsip_data) qsip data object tube relative abundances feature_ids (string) Feature ids plotted facet source_mat_ids (string, defaults ) list source material ids","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/plot_feature_curves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot qSIP feature data density curves — plot_feature_curves","text":"ggplot object","code":""},{"path":[]},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/plot_filter_gradient_position.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of filtering features — plot_filter_gradient_position","title":"Plot the results of filtering features — plot_filter_gradient_position","text":"running run_feature_filter() code, function produce two plot detailing consequences filtering. Plot shows retained removed features total tube relative abundance contribution, plot B shows retained removed features total count category. \"zero fractions\" shown plot B entirely missing given source_mat_id thus going retained matter run_filter_feature() parameters .","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/plot_filter_gradient_position.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of filtering features — plot_filter_gradient_position","text":"","code":"plot_filter_gradient_position(   qsip_data_object,   return_type = \"combined\",   colors = NULL )"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/plot_filter_gradient_position.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of filtering features — plot_filter_gradient_position","text":"qsip_data_object (qsip_data) return_type (string, default: combined) Changes return type combined plot (combined), list individual plots (individual) list dataframes (dataframe) colors (strings) optional color palette","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/plot_filter_gradient_position.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of filtering features — plot_filter_gradient_position","text":"Combined individual plots, raw dataframes","code":""},{"path":[]},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/plot_sample_curves.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot qSIP sample data density curves — plot_sample_curves","title":"Plot qSIP sample data density curves — plot_sample_curves","text":"Plot qSIP sample data density curves","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/plot_sample_curves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot qSIP sample data density curves — plot_sample_curves","text":"","code":"plot_sample_curves(sample_data, source_data = NULL, colors = NULL)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/plot_sample_curves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot qSIP sample data density curves — plot_sample_curves","text":"sample_data (qsip_sample_data qsip_data) Sample data holds density abundance values source_data (qsip_source_data) Optional data required sample_data qsip_sample_data object","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/plot_sample_curves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot qSIP sample data density curves — plot_sample_curves","text":"ggplot object","code":""},{"path":[]},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/plot_source_wads.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the source WADs by isotope — plot_source_wads","title":"Plot the source WADs by isotope — plot_source_wads","text":"Plot source WADs isotope","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/plot_source_wads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the source WADs by isotope — plot_source_wads","text":"","code":"plot_source_wads(sample_data, source_data = NULL, group = NULL, colors = NULL)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/plot_source_wads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the source WADs by isotope — plot_source_wads","text":"sample_data (qsip_data qsip_sample_data) qsip object sample data optional source data source_data (qsip_source_data, optional) optional qsip_source_data object. Required sample_data contain source_data group (string) optional grouping parameter facet y x,y axes color (string) optional override default color palette","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/plot_source_wads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the source WADs by isotope — plot_source_wads","text":"ggplot object","code":""},{"path":[]},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/qsip_data.html","id":null,"dir":"Reference","previous_headings":"","what":"qSIP master data class — qsip_data","title":"qSIP master data class — qsip_data","text":"class hold validate qSIP data.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/qsip_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"qSIP master data class — qsip_data","text":"","code":"qsip_data(source_data, sample_data, feature_data)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/qsip_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"qSIP master data class — qsip_data","text":"validated qsip_data object","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/qsip_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"qSIP master data class — qsip_data","text":"qSIP2 object holds source, sample feature data, validation necessary source_mat_ids sample_ids correctly shared.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/qsip_data.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"qSIP master data class — qsip_data","text":"source_data (qsip_source_data) qSIP source data object sample_data (qsip_sample_data) qSIP sample data object feature_data (qsip_feature_data) qSIP feature data object","code":""},{"path":[]},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/qsip_feature_data.html","id":null,"dir":"Reference","previous_headings":"","what":"qSIP feature table class — qsip_feature_data","title":"qSIP feature table class — qsip_feature_data","text":"class hold validate feature abundance table","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/qsip_feature_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"qSIP feature table class — qsip_feature_data","text":"","code":"qsip_feature_data(data, feature_id)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/qsip_feature_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"qSIP feature table class — qsip_feature_data","text":"validated object qsip_feature_data type","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/qsip_feature_data.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"qSIP feature table class — qsip_feature_data","text":"data (dataframe) ASV/OTU table equivalent feature_id (string) Column name unique taxa IDs","code":""},{"path":[]},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/qsip_sample_data.html","id":null,"dir":"Reference","previous_headings":"","what":"qSIP sample data class — qsip_sample_data","title":"qSIP sample data class — qsip_sample_data","text":"class hold validate sample data.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/qsip_sample_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"qSIP sample data class — qsip_sample_data","text":"","code":"qsip_sample_data(   data,   sample_id,   source_mat_id,   gradient_position,   gradient_pos_density,   gradient_pos_amt,   gradient_pos_rel_amt )"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/qsip_sample_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"qSIP sample data class — qsip_sample_data","text":"validated object qsip_sample_data type","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/qsip_sample_data.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"qSIP sample data class — qsip_sample_data","text":"data (dataframe) Metadata samples/fractions sample_id (string) unique sample ID source_mat_id (string) unique ID biological subject replicate gradient_position (string) Column name fraction position gradient_pos_density (string) Column name gradient density gradient_pos_amt (string) Column name total amount per fraction, either qPCR copies DNA gradient_pos_rel_amt (string) Column name relative fraction abundance compared total fraction_volume (string) volume loaded onto column. Required gradient_pos_amt reported concentration","code":""},{"path":[]},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/qsip_source_data.html","id":null,"dir":"Reference","previous_headings":"","what":"qSIP source data class — qsip_source_data","title":"qSIP source data class — qsip_source_data","text":"class hold validate qSIP source data.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/qsip_source_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"qSIP source data class — qsip_source_data","text":"","code":"qsip_source_data(data, isotope, isotopolog, source_mat_id)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/qsip_source_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"qSIP source data class — qsip_source_data","text":"validated qsip_source_data object","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/qsip_source_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"qSIP source data class — qsip_source_data","text":"qSIP2 object holds source data calculating EAF values. want also calculate growth use qsip_source_data_growth object.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/qsip_source_data.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"qSIP source data class — qsip_source_data","text":"data (dataframe) Source metadata isotope (string) Isotope name isotopolog (string)  Isotopolog data source_mat_id (string) unique ID biological subject source","code":""},{"path":[]},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/remove_isotopolog_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove isotopolog_label from data — remove_isotopolog_label","title":"Remove isotopolog_label from data — remove_isotopolog_label","text":"convert data isotope isotopolog_label one isotope ","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/remove_isotopolog_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove isotopolog_label from data — remove_isotopolog_label","text":"","code":"remove_isotopolog_label(data)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/remove_isotopolog_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove isotopolog_label from data — remove_isotopolog_label","text":"data Sample metadata (dataframe)","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/remove_isotopolog_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove isotopolog_label from data — remove_isotopolog_label","text":"dataframe isotopolog_label column removed isotope column modified","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/run_EAF_calculations.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate EAF values — run_EAF_calculations","title":"Calculate EAF values — run_EAF_calculations","text":"last main workhorse function qSIP analysis generates important values (Z, G, M, M_labeledmax, M_labeled EAF) observed data well resampled data.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/run_EAF_calculations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate EAF values — run_EAF_calculations","text":"","code":"run_EAF_calculations(qsip_data_object)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/run_EAF_calculations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate EAF values — run_EAF_calculations","text":"qsip_data_object (qsip_data) qsip_data_object resample information","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/run_EAF_calculations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate EAF values — run_EAF_calculations","text":"Returns updated qsip_data_object final EAF values @EAF slot.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/run_feature_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter features in a qSIP data object — run_feature_filter","title":"Filter features in a qSIP data object — run_feature_filter","text":"Filters feature feature table qsip_data object presence minimum number fractions source_mat_ids.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/run_feature_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter features in a qSIP data object — run_feature_filter","text":"","code":"run_feature_filter(   qsip_data_object,   unlabeled_source_mat_ids,   labeled_source_mat_ids,   min_unlabeled_sources = 2,   min_labeled_sources = 2,   min_unlabeled_fractions = 2,   min_labeled_fractions = 2,   quiet = FALSE )"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/run_feature_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter features in a qSIP data object — run_feature_filter","text":"qsip_data_object (qsip_data) object qsip_data class unlabeled_source_mat_ids (string strings(s)) list unlabeled source_mat_ids filter labeled_source_mat_ids (string strings(s)) list labeled source_mat_ids filter min_unlabeled_sources (integer, default: 2) Minimum number unlabeled source_mat_ids feature must found . min_labeled_sources (integer, default: 2) Minimum number labeled source_mat_ids feature must found . min_unlabeled_fractions (integer, default: 2) Minimum number fractions feature must found present unlabeled source_mat_id min_labeled_fractions (integer, default: 2) Minimum number fractions feature must found present labeled source_mat_id","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/run_feature_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter features in a qSIP data object — run_feature_filter","text":"updated qsip_data object filtered feature dataframe @filtered_feature_data slot intermediate data @filter_results slot plotting.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/run_feature_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter features in a qSIP data object — run_feature_filter","text":"Filtering first done fractions, source_mat_ids. example, take feature found three source_mat_ids 3, 5 9 fractions. set min_fractions = 5 min_sources = 3 feature survive filtering although found three source_mat_ids, one less minimum fraction count therefore considered found source_mat_id. feature table filtered retain feature_ids passing filter, keep sample_ids correspond given source_mat_ids. filtered table stored @filtered_feature_data slot, values table raw initial values relative abundances per fraction per tube. values originally calculated qsip_data object creation values features stored @tube_rel_abundance slot.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/run_resampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample WAD values — run_resampling","title":"Resample WAD values — run_resampling","text":"Takes filtered WAD dataframe resamples x times","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/run_resampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample WAD values — run_resampling","text":"","code":"run_resampling(qsip_data_object, resamples = 1000, with_seed = NULL)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/run_resampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample WAD values — run_resampling","text":"qsip_data_object (qsip_data) qsip data object filtered resamples (integer) number resamples/bootstraps run with_seed (integer) optional seed reproducibility","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/run_resampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resample WAD values — run_resampling","text":"new qsip_data object @resamples slot populated resamples wad values","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/run_resampling.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Resample WAD values — run_resampling","text":"function returns list resampled dataframes x length labeled unlabeled sources.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/show_comparison_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Show comparison groups — show_comparison_groups","title":"Show comparison groups — show_comparison_groups","text":"Generates table ids grouped columns isotope, rows given treatments.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/show_comparison_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show comparison groups — show_comparison_groups","text":"","code":"show_comparison_groups(   source_data,   group,   isotope = \"isotope\",   source_mat_id = \"source_mat_id\" )"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/show_comparison_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show comparison groups — show_comparison_groups","text":"source_data (dataframe, qsip_source_data qsip_data) Sample metadata group (string) Treatment value values isotope (string, default: isotope) Column name isotope data source_mat_id (string, default: source_mat_id) Column name source_mat_id","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/show_comparison_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show comparison groups — show_comparison_groups","text":"dataframe id grouped different group treatments isotopes","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/source_results_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter features by source message formatting — source_results_message","title":"Filter features by source message formatting — source_results_message","text":"Filter features source message formatting","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/source_results_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter features by source message formatting — source_results_message","text":"","code":"source_results_message(by_source)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/source_results_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter features by source message formatting — source_results_message","text":"by_source by_source dataframe run_feature_filter","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/summarize_EAF_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the observed and resampled EAF values — summarize_EAF_values","title":"Summarize the observed and resampled EAF values — summarize_EAF_values","text":"Reports observed EAF value (observed_EAF) well mean resampled values (mean_resampled_EAF) lower upper confidence interval given confidence limit.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/summarize_EAF_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the observed and resampled EAF values — summarize_EAF_values","text":"","code":"summarize_EAF_values(qsip_data_object, confidence = 0.9)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/summarize_EAF_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the observed and resampled EAF values — summarize_EAF_values","text":"qsip_data_object (qsip_data) qsip data object confidence (numeric, default: 0.9) confidence level confidence interval","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/summarize_EAF_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the observed and resampled EAF values — summarize_EAF_values","text":"dataframe summarized observed resampled EAF values","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/summarize_EAF_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize the observed and resampled EAF values — summarize_EAF_values","text":"confidence interval uses resampling method returns quantile values resampled data. confidence = 0.9 (default) function returns 5% 95% quantiles (representing 90% resampling) lower upper results.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/validate_abundances.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the validity of a feature abundance table — validate_abundances","title":"Check the validity of a feature abundance table — validate_abundances","text":"validation function internal function check validity feature abundance table.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/validate_abundances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the validity of a feature abundance table — validate_abundances","text":"","code":"validate_abundances(data, feature_id)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/validate_abundances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the validity of a feature abundance table — validate_abundances","text":"data (dataframe) ASV/OTU table feature_id (string) Column name feature IDs","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/validate_abundances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the validity of a feature abundance table — validate_abundances","text":"Returns NULL values valid, printed error","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/validate_abundances.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check the validity of a feature abundance table — validate_abundances","text":"Rows contain unique taxa ids column designated id argument. column name unique sample name. Validity checking includes making sure data numeric (except feature IDs), numbers integers, numbers negative.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/validate_gradient_pos_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the validity of density values — validate_gradient_pos_density","title":"Check the validity of density values — validate_gradient_pos_density","text":"Check validity density values","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/validate_gradient_pos_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the validity of density values — validate_gradient_pos_density","text":"","code":"validate_gradient_pos_density(gradient_pos_density, low = 1.55, high = 1.8)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/validate_gradient_pos_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the validity of density values — validate_gradient_pos_density","text":"gradient_pos_density (string strings) Density value values low (numeric, default: 1.55) low limit valid density values high (numeric, default: 1.8) high limit valid density values","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/validate_gradient_pos_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the validity of density values — validate_gradient_pos_density","text":"Returns NULL density values valid, printed error","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/validate_gradient_position.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the validity of gradient position values — validate_gradient_position","title":"Check the validity of gradient position values — validate_gradient_position","text":"Valid gradient positions integers. value can -1 represent \"bulk\" non-qSIP samples.","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/validate_gradient_position.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the validity of gradient position values — validate_gradient_position","text":"","code":"validate_gradient_position(gradient_position)"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/validate_gradient_position.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the validity of gradient position values — validate_gradient_position","text":"gradient_position (string strings) Gradient position value values","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/validate_gradient_position.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the validity of gradient position values — validate_gradient_position","text":"NULL gradient position values valid, printed error","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/validate_isotopes.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the validity of an isotope string — validate_isotopes","title":"Check the validity of an isotope string — validate_isotopes","text":"Check validity isotope string","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/validate_isotopes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the validity of an isotope string — validate_isotopes","text":"","code":"validate_isotopes(   isotope,   isotope_list = c(\"12C\", \"13C\", \"14N\", \"15N\", \"16O\", \"18O\") )"},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/validate_isotopes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the validity of an isotope string — validate_isotopes","text":"isotope (string(s)) Isotope value values isotope_list (strings, default: c(\"12C\", \"13C\", \"14N\", \"15N\", \"16O\", \"18O\")) Isotopes check ","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/validate_isotopes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the validity of an isotope string — validate_isotopes","text":"Returns NULL isotope strings valid, printed error","code":""},{"path":"https://jeffkimbrel.github.io/qSIP2/reference/validate_isotopes.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Check the validity of an isotope string — validate_isotopes","text":"isotope_list may change isotopolog_label stays thing. \"labeled\" isotopes allowed.","code":""}]
